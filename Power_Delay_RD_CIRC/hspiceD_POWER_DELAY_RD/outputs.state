_outputList = nil
 _envSaveOptions = nil
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "Averaga Power"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'times
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'average
tmp2 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'abs
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'IT
tmp2 = "/V22/PLUS"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'IT
tmp2 = "/V22/PLUS"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'average
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/vdd"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = 9.9560466089266715e-06
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 1
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/CLK"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 2
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "delay"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
tmp1 = 'delay
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/WE<0>"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/vdd"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp4 = 2
tmp5 = "rising"
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/BL0<0>"
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/vdd"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp8 = 1
tmp9 = "rising"
tmp10 = 0
tmp11 = 0
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 3
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "delay_read_0"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
tmp1 = 'delay
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/SAE"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/VDD"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp4 = 3
tmp5 = "rising"
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/OUT<0>"
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/VDD"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp8 = 1
tmp9 = "falling"
tmp10 = 0
tmp11 = 0
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 4
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->definedIn = "XYZ"
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/WE<0>"
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y6"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 5
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/V22/PLUS"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = "auto"
tmp1->type = 'terminal
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = nil
tmp1->save = 't
tmp1->march = nil
tmp1->index = 6
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/SAE"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 7
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/BL0<0>"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y5"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 8
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/BL0_n<0>"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y6"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 9
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->definedIn = "XYZ"
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/OUT<0>"
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y7"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 10
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "delay_read_1"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
tmp1 = 'delay
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/SAE"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/VDD"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp4 = 2
tmp5 = "rising"
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/OUT<0>"
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VDC
tmp2 = "/VDD"
list(tmp1 tmp2)
)
tmp3 = 2
list(tmp1 tmp2 tmp3)
)
tmp8 = 1
tmp9 = "rising"
tmp10 = 0
tmp11 = 0
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 11
tmp1->timeStamp = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
_envSaveOptions = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'allAnalogTC
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'allAnalogNV
tmp2 = 't
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
savedComponent = list( _outputList _envSaveOptions ) 
_outputList = 'unbound
 _envSaveOptions = 'unbound
